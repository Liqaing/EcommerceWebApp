@using Microsoft.AspNetCore.Identity;
@inject UserManager<AppUser> UserManager
@model OrderVM

@{
	// If order is not yet paid, then set input to read only
	string? readOnly = "readonly";
	if (Model.orderHeader.PaymentStatus == OrderAndPaymentStatusConstate.PaymentStatusPending)
	{
		readOnly = null;
	}

	var userId = UserManager.GetUserId(User);

}

<form method="post">
	<input asp-for="@Model.orderHeader.OrderHeaderId" hidden />

	<div class="container h-100 py-2">
		<div class="row d-flex justify-content-center align-items-center h-100">
			<div class="col-12">

				<div class="d-flex justify-content-between align-items-center mb-4">
					<h3 class="fw-normal mb-0 text-black">Order Detail</h3>

					<div class="d-flex align-items-center">
						<a asp-action="Index"
						class="btn btn-outline-secondary mr-2">Back</a>
					</div>
				</div>
			</div>
			<div>
				<div class="card border-0">
					<div class="card-body p-0">
						<div class="container rounded p-0">
							<div class="row">
								<div class="col-12 col-lg-6 pb-4">
									<div class="row">
										<h4 class="d-flex justify-content-between align-items-center mb-3">
											<span class="text-dark">Shipping Details:</span>
										</h4>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Name</label>
										</div>
										<div class="col-8">
											<input asp-for="@Model.orderHeader.Name" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="@Model.orderHeader.Name" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Phone</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.PhoneNumber" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.PhoneNumber" class="text-danger"></span>
										</div>
									</div>

									<div class="row my-1">
										<div class="col-4">
											<label>Home Number</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.HomeNumber" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.HomeNumber" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Street Address</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.StreetName" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.StreetName" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Village</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.Village" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.Village" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Commune</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.Commune" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.Commune" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>City</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.City" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.City" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Postal Code</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.PostalNumber" readonly="@readOnly" class="form-control" />
											<span asp-validation-for="orderHeader.PostalNumber" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Order Status</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.OrderStatus" readonly class="form-control" />
											<span asp-validation-for="orderHeader.OrderStatus" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Order Date</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.OrderDate" readonly class="form-control" />
											<span asp-validation-for="orderHeader.OrderDate" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Payment Status</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.PaymentStatus" readonly class="form-control" />
											<span asp-validation-for="orderHeader.PaymentStatus" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Payment Date</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.PaymentDate" readonly class="form-control" />
											<span asp-validation-for="orderHeader.PaymentDate" class="text-danger"></span>
										</div>
									</div>

									<div class="row my-1">
										<div class="col-4">
											<label>Session Id</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.SessionId" readonly class="form-control" />
											<span asp-validation-for="orderHeader.SessionId" class="text-danger"></span>
										</div>
									</div>
									<div class="row my-1">
										<div class="col-4">
											<label>Payment Intent Id</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.PaymentIntentId" readonly class="form-control" />
											<span asp-validation-for="orderHeader.PaymentIntentId" class="text-danger"></span>
										</div>
									</div>

									<div class="row my-1">
										<div class="col-4">
											<label>Deliver By</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.deliveryEmpName" readonly class="form-control" />
										</div>
									</div>

									<div class="row my-1">
										<div class="col-4">
											<label>Shipping Date</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.ShippingDate" readonly class="form-control" />
										</div>
									</div>

									<div class="row my-1">
										<div class="col-4">
											<label>Arrival Date</label>
										</div>
										<div class="col-8">
											<input asp-for="orderHeader.ArrivalDate" readonly class="form-control" />
										</div>
									</div>


									@if (this.User.IsInRole(RoleConstant.Role_Customer) &&
										Model.orderHeader.PaymentStatus == OrderAndPaymentStatusConstate.PaymentStatusPending &&
										Model.orderHeader.OrderStatus == OrderAndPaymentStatusConstate.StatusPending)
									{
										<button id="update-shipping" class="btn btn-primary col-12">Update Shipping Detail</button>
									}

								</div>
								<div class="col-12 col-lg-5 offset-lg-1">
									<h4 class="d-flex justify-content-between align-items-center mb-3">
										<span class="text-dark">Order Summary:</span>
									</h4>
									<ul class="list-group mb-3">
										@foreach (OrderDetail orderDetail in @Model.orderDetails)
										{
											<li class="list-group-item d-flex justify-content-between">
												<div>
													<h6 class="my-0">@orderDetail.Product.ProName</h6>
													<small class="text-muted">Unit Price: @orderDetail.UnitPrice.ToString("c")</small>
													<br>
													<small class="text-muted">Quantity: @orderDetail.Quantity</small>
												</div>
												<span class="text-muted">@orderDetail.Price.ToString("c")</span>
											</li>
										}

										<li class="list-group-item d-flex justify-content-between bg-light">
											<small class="text-primary">Total (USD)</small>
											<strong class="text-primary	">@Model.orderHeader.OrderTotal.ToString("c")</strong>
										</li>
									</ul>

									<button id="print" type="button" class="btn btn-success mb-2 rounded">Print</button>

									@if (this.User.IsInRole(RoleConstant.Role_Customer) &&
											Model.orderHeader.PaymentStatus == OrderAndPaymentStatusConstate.PaymentStatusPending &&
											Model.orderHeader.OrderStatus == OrderAndPaymentStatusConstate.StatusPending)
									{
										<!-- When not pay yet, display paynow and cancel button -->
										<div class="btn-group d-flex flex-column">
											<button asp-action="Pay" class="btn btn-primary mb-2 rounded">Pay Now</button>
											<button asp-action="Cancel" class="btn btn-danger rounded">Cancel Order</button>
										</div>
									}

									@if ((this.User.IsInRole(RoleConstant.Role_Admin) || this.User.IsInRole(RoleConstant.Role_Sale_Employee)) &&
											Model.orderHeader.PaymentStatus == OrderAndPaymentStatusConstate.PaymentStatusPending &&
											Model.orderHeader.OrderStatus == OrderAndPaymentStatusConstate.StatusPending)
									{
										<!-- When not pay yet, display paynow and cancel button -->
										<div class="btn-group d-flex flex-column">							
											<button asp-area="Admin" asp-action="Cancel" class="btn btn-danger rounded">Cancel Order</button>
										</div>
									}


									@if (this.User.IsInRole(RoleConstant.Role_Delivery_Employee) &&
											Model.orderHeader.PaymentStatus == OrderAndPaymentStatusConstate.PaymentStatusApproved &&
											Model.orderHeader.OrderStatus == OrderAndPaymentStatusConstate.StatusApproved)
									{
										<!-- When not pay yet, display paynow and cancel button -->
										<div class="btn-group d-flex flex-column">
											<button asp-area="Admin" asp-action="Pick" class="btn btn-primary rounded">Pick Order for Delivery</button>
										</div>
									}

									@if (userId == Model.orderHeader.DeliveryEmpId &&
											Model.orderHeader.OrderStatus == OrderAndPaymentStatusConstate.StatusInDelivering)
									{
										<!-- When not pay yet, display paynow and cancel button -->
										<div class="btn-group d-flex flex-column">
											<button asp-area="Admin" asp-action="Drop" class="btn btn-primary rounded">Drop Order for Customer</button>
										</div>
									}

								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</form>

<script>
	document.querySelector("#print").addEventListener("click", () => {

		let model = @Html.Raw(Json.Serialize(Model));

		const { jsPDF } = window.jspdf;
		const doc = new jsPDF({
			orientation: 'p',
			unit: 'mm',
			format: 'a4',
			putOnlyUsedFonts: true
		});

		// Company details
		doc.setFontSize(16);
		doc.setFont("helvetica", "bold");
		doc.text("East Repair Inc.", 10, 10);
		doc.setFontSize(12);
		doc.text("1912 Harvest Lane", 10, 20);
		doc.text("New York, NY 12210", 10, 30);

		// Billing and Shipping Information
		doc.text("Bill To", 10, 50);
		doc.text("John Smith", 10, 60);
		doc.text("2 Court Square", 10, 70);
		doc.text("New York, NY 12210", 10, 80);

		doc.text("Ship To", 80, 50);
		doc.text("John Smith", 80, 60);
		doc.text("3787 Pineview Drive", 80, 70);
		doc.text("Cambridge, MA 12210", 80, 80);

		doc.text("Receipt #", 150, 50);
		doc.text("US-001", 180, 50);
		doc.text("Receipt Date", 150, 60);
		doc.text("11/02/2019", 180, 60);
		doc.text("P.O.#", 150, 70);
		doc.text("2312/2019", 180, 70);
		doc.text("Due Date", 150, 80);
		doc.text("26/02/2019", 180, 80);

		// Table Headers
		doc.setFontSize(10);
		doc.setFont("helvetica", "bold");
		doc.text("QTY", 10, 100);
		doc.text("DESCRIPTION", 30, 100);
		doc.text("UNIT PRICE", 120, 100);
		doc.text("AMOUNT", 180, 100);

		// Products loop
		const products = [
			{ qty: 1, description: "Front and rear brake cables", unitPrice: 100.00, amount: 100.00 },
			{ qty: 2, description: "New set of pedal arms", unitPrice: 15.00, amount: 30.00 },
			{ qty: 3, description: "Labor 3hrs", unitPrice: 5.00, amount: 15.00 }
		];

		let yPosition = 110;
		products.forEach(product => {
			doc.setFont("helvetica", "normal");
			doc.text(product.qty.toString(), 10, yPosition);
			doc.text(product.description, 30, yPosition);
			doc.text(product.unitPrice.toFixed(2).toString(), 120, yPosition, { align: "right" });
			doc.text(product.amount.toFixed(2).toString(), 180, yPosition, { align: "right" });
			yPosition += 10;
		});

		// Subtotal, Tax, and Total
		doc.text("Subtotal", 120, yPosition + 10);
		doc.text("145.00", 180, yPosition + 10, { align: "right" });
		doc.text("Sales Tax 6.25%", 120, yPosition + 20);
		doc.text("9.06", 180, yPosition + 20, { align: "right" });
		doc.setFont("helvetica", "bold");
		doc.text("TOTAL", 120, yPosition + 30);
		doc.text("154.06", 180, yPosition + 30, { align: "right" });

		// Footer with Signature
		doc.text("John Smith", 150, yPosition + 50);


		// Save the PDF
		doc.save('order-receipt.pdf');
	})
</script>

<script src="~/js/order/customer/order.js" defer></script>

	